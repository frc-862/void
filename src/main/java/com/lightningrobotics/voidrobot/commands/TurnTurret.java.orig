package com.lightningrobotics.voidrobot.commands;

import java.util.Map;

import com.lightningrobotics.voidrobot.Constants;
import com.lightningrobotics.voidrobot.subsystems.LEDs;
import com.lightningrobotics.voidrobot.subsystems.Turret;

import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardTab;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.CommandBase;

public class TurnTurret extends CommandBase {

    private Turret turret;

    private double turretTarget = 0d;

    // private double targetAngle;

    private ShuffleboardTab turretTab = Shuffleboard.getTab("turret");
    private NetworkTableEntry targetAngle;
    private NetworkTableEntry currentAngle;
    private NetworkTableEntry angleSlider;

    LEDs leds = new LEDs();

    public TurnTurret(Turret turret) { // , double targetAngle
        this.turret = turret;
        //   this.targetAngle = targetAngle;

        targetAngle = turretTab
        .add("", Constants.DEFAULT_ANGLE)
        .getEntry();


        addRequirements(turret);        
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {}

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        turret.stopTurret();
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return turret.isDone();
    }
}